stat="identity") +
facet_wrap(~variable, scales = "free_y") +
scale_fill_manual(values = c("dark green", "dark blue"),
labels = c("No Flood","Flood"),
name = "") +
labs(x="Flood", y="Value")
rm(flood_comb)
model_data <- flood_dep %>%
inner_join(elev_comb, by = "FID") %>%
inner_join(slope_comb, by = "FID") %>%
inner_join(water_comb, by = "FID") %>%
inner_join(fac_comb, by = "FID") %>%
inner_join(lu_comb, by = "FID") %>%
mutate(permeability = as.factor(permeability))
View(model_data)
set.seed(3456)
trainIndex <- createDataPartition(model_data$permeability, p = .70,
list = FALSE,
times = 1)
floodTrain <- model_data[ trainIndex,]
floodTest  <- model_data[-trainIndex,
# Combine all data sets for model building
model_data <- flood_dep %>%
inner_join(elev_comb, by = "FID") %>%
inner_join(slope_comb, by = "FID") %>%
inner_join(water_comb, by = "FID") %>%
inner_join(fac_comb, by = "FID") %>%
inner_join(lu_comb, by = "FID") %>%
mutate(permeability = as.factor(permeability))
#land cover is dummy var and categorical var
# Creating training and test sets
set.seed(3456)
set.seed(3456)
trainIndex <- createDataPartition(model_data$permeability, p = .70,
list = FALSE,
times = 1)
floodTrain <- model_data[ trainIndex,]
floodTest  <- model_data[-trainIndex,]
floodModel <- glm(flood ~ .,
family="binomial"(link="logit"), data = floodTrain %>%
as.data.frame() %>%
select(-OBJECTID))
floodModel <- glm(flood ~ .,
family="binomial"(link="logit"), data = floodTrain %>%
as.data.frame() %>%
select(-FID))
summary(floodModel)
View(floodModel)
classProbs <- predict(floodModel, floodTest, type="response")
hist(classProbs)
testProbs <- data.frame(obs = as.factor(floodTest$flood),
pred = classProbs)
ggplot(testProbs, aes(x = pred, fill=as.factor(obs))) +
geom_density() +
facet_grid(obs ~ .) +
xlab("Probability") +
ylab("Frequency")+
geom_vline(xintercept = .5) +
scale_fill_manual(values = c("dark blue", "dark green"),
labels = c("Not Flood","Flood"),
name = "")+
plotTheme
testProbs$predClass  = ifelse(testProbs$pred > .5 ,1,0)
caret::confusionMatrix(reference = as.factor(testProbs$obs),
data = as.factor(testProbs$predClass),
positive = "1")
View(floodTest)
# change obs to numeric
testProbs$obs <- as.numeric(as.character(testProbs$obs))
# plot results
ggplot(testProbs, aes(d = obs, m = pred)) +
geom_roc(n.cuts = 50, labels = FALSE) +
style_roc(theme = theme_grey) +
geom_abline(slope = 1, intercept = 0, size = 1.5, color = 'grey') +
plotTheme
#area under the curve
auc(testProbs$obs, testProbs$pred)
ctrl <- trainControl(method = "cv",
number = 100,
p = 0.7,
savePredictions = TRUE)
cvFit <- train(as.factor(flood) ~ .,  data = model_data %>%
as.data.frame(),
method="glm", family="binomial",
trControl = ctrl)
cvFit
ggplot(as.data.frame(cvFit$resample), aes(Accuracy)) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1)) +
labs(x="Accuracy",
y="Count")+
plotTheme
###Refine here by yujin
allPredictions <-
predict(cvFit, flood, type="prob")[,2]
ctrl <- trainControl(method = "cv",
number = 100,
p = 0.7,
savePredictions = TRUE)
cvFit <- train(as.factor(flood) ~ .,  data = flood_dep %>%
as.data.frame(),
method="glm", family="binomial",
trControl = ctrl)
cvFit
ggplot(as.data.frame(cvFit$resample), aes(Accuracy)) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1)) +
labs(x="Accuracy",
y="Count")+
plotTheme
###Refine here by yujin
allPredictions <-
predict(cvFit, flood, type="prob")[,2]
ctrl <- trainControl(method = "cv",
number = 100,
p = 0.7,
savePredictions = TRUE)
cvFit <- train(as.factor(flood) ~ .,  data = model_data %>%
as.data.frame(),
method="glm", family="binomial",
trControl = ctrl)
cvFit
ggplot(as.data.frame(cvFit$resample), aes(Accuracy)) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1)) +
labs(x="Accuracy",
y="Count")+
plotTheme
###Refine here by yujin
allPredictions <-
predict(cvFit, flood, type="prob")[,2]
View(fac_comb)
ctrl <- trainControl(method = "cv",
number = 100,
p = 0.7,
savePredictions = TRUE)
cvFit <- train(as.factor(flood) ~ .,  data = model_data %>%
as.data.frame(),
method="glm", family="binomial",
trControl = ctrl)
cvFit
ggplot(as.data.frame(cvFit$resample), aes(Accuracy)) +
geom_histogram() +
scale_x_continuous(limits = c(0, 1)) +
labs(x="Accuracy",
y="Count")+
plotTheme
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(pscl)
library(plotROC)
library(pROC)
library(sf)
library(tidyverse)
library(knitr)
library(kableExtra)
library(tigris)
library(viridis)
library(ggplot2)
mapTheme <- theme(plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_line(colour = 'transparent'),
panel.grid.minor=element_blank(),
legend.direction = "vertical",
legend.position = "right",
plot.margin = margin(1, 1, 1, 1, 'cm'),
legend.key.height = unit(1, "cm"), legend.key.width = unit(0.2, "cm"))
plotTheme <- theme(
plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
# Set the entire chart region to blank
panel.background=element_blank(),
plot.background=element_blank(),
#panel.border=element_rect(colour="#F0F0F0"),
# Format the grid
panel.grid.major=element_line(colour="#D0D0D0",size=.75),
axis.ticks=element_blank())
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(pscl)
library(plotROC)
library(pROC)
library(sf)
library(tidyverse)
library(knitr)
library(kableExtra)
library(tigris)
library(viridis)
library(ggplot2)
knitr::opts_chunk$set(echo = TRUE)
library(caret)
library(pscl)
library(plotROC)
library(pROC)
library(sf)
library(tidyverse)
library(knitr)
library(kableExtra)
library(tigris)
library(viridis)
library(ggplot2)
mapTheme <- theme(plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid.major=element_line(colour = 'transparent'),
panel.grid.minor=element_blank(),
legend.direction = "vertical",
legend.position = "right",
plot.margin = margin(1, 1, 1, 1, 'cm'),
legend.key.height = unit(1, "cm"), legend.key.width = unit(0.2, "cm"))
plotTheme <- theme(
plot.title =element_text(size=12),
plot.subtitle = element_text(size=8),
plot.caption = element_text(size = 6),
axis.text.x = element_text(size = 10, angle = 45, hjust = 1),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 10),
# Set the entire chart region to blank
panel.background=element_blank(),
plot.background=element_blank(),
#panel.border=element_rect(colour="#F0F0F0"),
# Format the grid
panel.grid.major=element_line(colour="#D0D0D0",size=.75),
axis.ticks=element_blank())
calgary_fishnet<-st_read("https://raw.githubusercontent.com/luyiiw/LUEM/main/Calgary_JSON/Calgary_Fishnet.json")
calgary_boundary<-st_read("https://raw.githubusercontent.com/luyiiw/LUEM/main/Calgary_JSON/Calgary_Boundary.json")
library(raster)
library(rgdal)
#Inundation Calgary
dependent <- raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/calgary_raster/dependent.tif")
dependent_df <- as.data.frame(dependent, xy = TRUE)
fishnet_shp<- st_read("C:/Users/USER/Desktop/LandUseModeling/Assignment3/Calgary/fishnet_boundary.shp")
st_geometry_type(fishnet_shp)
calfishnet_shp <- st_zm(fishnet_shp, drop = TRUE)
clipped_depen <- mask(dependent,calfishnet_shp)
clip_df <-as.data.frame(clipped_depen, xy=TRUE)
ggplot() +
geom_raster(data = clip_df , aes(x = x, y = y, fill =dependent)) +
geom_sf(data = calgary_fishnet, color = "red", fill = NA) +
scale_fill_viridis_c() +
coord_sf() +
labs(title = "Raster Layer with Fishnet Overlay") +
mapTheme
##Design Refinement Later
ggplot() +
geom_raster(data = clip_df , aes(x = x, y = y, fill =dependent)) +
geom_sf(data = calgary_fishnet, color = "white", fill = NA) +
scale_fill_viridis_c() +
coord_sf() +
labs(title = "Raster Layer with Fishnet Overlay") +
mapTheme
ggplot() +
geom_raster(data = clip_df , aes(x = x, y = y, fill =dependent)) +
geom_sf(data = calgary_fishnet, color = "white", fill = NA) +
geom_tile() +
scale_fill_gradient(low = "yellow", high = "red") +  # Define your color scale here
coord_fixed() +
theme_minimal()
View(clip_df)
ggplot() +
geom_raster(data = clip_df , aes(x = x, y = y, fill =dependent)) +
geom_sf(data = calgary_fishnet, color = "white", fill = NA) +
geom_tile() +
scale_fill_gradient(0 = "yellow", 1 = "red") +  # Define your color scale here
ggplot() +
geom_raster(data = clip_df , aes(x = x, y = y, fill =dependent)) +
geom_sf(data = calgary_fishnet, color = "white", fill = NA) +
geom_tile() +
scale_fill_gradient("0" = "yellow", "1" = "red") +  # Define your color scale here
coord_fixed() +
theme_minimal()
ggplot() +
geom_raster(data = clip_df , aes(x = x, y = y, fill =dependent)) +
geom_sf(data = calgary_fishnet, color = "white", fill = NA) +
geom_tile() +
scale_fill_gradient(low = "yellow", high = "red") +  # Define your color scale here
coord_fixed() +
theme_minimal()
ggplot() +
geom_raster(data = clip_df , aes(x = x, y = y, fill =dependent)) +
geom_sf(data = calgary_fishnet, color = "white", fill = NA) +
geom_tile() +
scale_fill_gradient(low = "yellow", high = "red") +  # Define your color scale here
coord_sf() +  # Use spatial coordinates
theme_minimal()
ggplot() +
geom_raster(data = clip_df , aes(x = x, y = y, fill =dependent)) +
geom_sf(data = calgary_fishnet, color = "white", fill = NA) +
geom_tile() +
scale_fill_gradient(low = "yellow", high = "red") +  # Define your color scale here
coord_sf() +  # Use spatial coordinates
mapTheme
ggplot() +
geom_raster(data = clip_df , aes(x = x, y = y, fill =dependent)) +
geom_sf(data = calgary_fishnet, color = "white", fill = NA) +
scale_fill_continuous(
name = "Flood Status",
low = "yellow",
high = "red",
labels = c("Not inundation", "Inundation"),
limits = c(0, 1)  # Adjust this according to your data range
) +
coord_sf() +
labs(title = "Past Flooding in Calgary") +  # Set the plot title
theme_minimal() +  # Starts with a minimal theme
theme(
plot.title = element_text(halign = "center"),  # Center-align the title
panel.background = element_rect(fill = "white", colour = NA),  # Set panel background to white
plot.background = element_rect(fill = "white", colour = NA)  # Ensure plot background is white
)
ggplot() +
geom_raster(data = clip_df , aes(x = x, y = y, fill =dependent)) +
geom_sf(data = calgary_fishnet, color = "white", fill = NA) +
scale_fill_continuous(
name = "Flood Status",
low = "yellow",
high = "red",
labels = c("Not inundation", "Inundation"),
limits = c(0, 1)  # Adjust this according to your data range
) +
coord_sf() +
labs(title = "Past Flooding in Calgary") +  # Set the plot title
theme_minimal() +  # Starts with a minimal theme
theme(
plot.title = element_text(hjust = 0.5),  # Correct way to center-align the title
panel.background = element_rect(fill = "white", colour = NA),  # Set panel background to white
plot.background = element_rect(fill = "white", colour = NA)  # Ensure plot background is white
)
ggplot() +
geom_raster(data = clip_df , aes(x = x, y = y, fill =dependent)) +
geom_sf(data = calgary_fishnet, color = "white", fill = NA) +
scale_fill_continuous(
name = "Flood Status",
low = "yellow",
high = "red",
labels = c("Not inundation", "Inundation"),
limits = c(0, 1)  # Adjust this according to your data range
) +
coord_sf() +
labs(title = "Past Flooding in Calgary") +  # Set the plot title
mapTheme
ggplot() +
geom_raster(data = clip_df , aes(x = x, y = y, fill =dependent)) +
geom_sf(data = calgary_fishnet, color = "white", fill = NA) +
scale_fill_continuous(
name = "Flood Status",
low = "yellow", high = "red",
# Assuming you want custom labels for specific values:
breaks = c(0, 1),  # Points where the labels should be applied
labels = c("Not inundation", "Inundation")  # Make sure this matches the length of 'breaks'
) +
coord_fixed() +
labs(title = "Past Flooding in Calgary") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
ggplot() +
geom_raster(data = clip_df, aes(x = x, y = y, fill = dependent)) +  # Raster layer
geom_sf(data = calgary_fishnet, color = "white", fill = NA) +  # Spatial fishnet overlay
scale_fill_continuous(name = "Flood Status", low = "yellow", high = "red",
breaks = c(0, 1), labels = c("Not inundation", "Inundation")) +
coord_sf() +  # Explicitly use spatial coordinates
labs(title = "Past Flooding in Calgary") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
ggplot() +
geom_raster(data = clip_df, aes(x = x, y = y, fill = dependent)) +  # Raster layer
geom_sf(data = calgary_fishnet, color = "white", fill = NA) +  # Spatial fishnet overlay
scale_fill_continuous(name = "Flood Status", low = "yellow", high = "red",
breaks = c(0, 1), labels = c("Not inundation", "Inundation")) +
coord_sf() +  # Explicitly use spatial coordinates
labs(title = "Past Flooding in Calgary") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
+mapTheme
ggplot() +
geom_raster(data = clip_df, aes(x = x, y = y, fill = dependent)) +  # Raster layer
geom_sf(data = calgary_fishnet, color = "white", fill = NA) +  # Spatial fishnet overlay
scale_fill_continuous(name = "Flood Status", low = "yellow", high = "red",
breaks = c(0, 1), labels = c("Not inundation", "Inundation")) +
coord_sf() +  # Explicitly use spatial coordinates
labs(title = "Past Flooding in Calgary") +
mapTheme
ggplot() +
geom_raster(data = clip_df, aes(x = x, y = y, fill = dependent)) +  # Raster layer
geom_sf(data = calgary_fishnet, color = "white", fill = NA) +  # Spatial fishnet overlay
scale_fill_continuous(name = "Flood Status", low = "yellow", high = "red",na.value = "transparent",
breaks = c(0, 1), labels = c("Not inundation", "Inundation")) +
coord_sf() +  # Explicitly use spatial coordinates
labs(title = "Past Flooding in Calgary") +
mapTheme
ggplot() +
geom_raster(data = clip_df, aes(x = x, y = y, fill = dependent)) +  # Raster layer
geom_sf(data = calgary_fishnet, color = "grey", fill = NA) +  # Spatial fishnet overlay
scale_fill_continuous(name = "Flood Status", low = "yellow", high = "red",na.value = "transparent",
breaks = c(0, 1), labels = c("Not inundation", "Inundation")) +
coord_sf() +  # Explicitly use spatial coordinates
labs(title = "Past Flooding in Calgary") +
mapTheme
ggplot() +
geom_raster(data = clip_df, aes(x = x, y = y, fill = dependent)) +
geom_tile() +  # Use geom_tile for raster data
scale_fill_manual(values = c("1" = "yellow", "0" = "red"),
labels = c("1" = "yellow", "0" = "red"),
name = "Your Legend Title") +
coord_fixed() +
theme_minimal()
clip_df$dependent <- factor(clip_df$dependent)
clip_df$dependent <- factor(clip_df$dependent)
ggplot() +
geom_raster(data = clip_df, aes(x = x, y = y, fill = dependent)) +
geom_tile() +  # Use geom_tile for raster data
scale_fill_manual(values = c("1" = "yellow", "0" = "red"),
labels = c("1" = "yellow", "0" = "red"),
name = "Your Legend Title") +
coord_fixed() +
theme_minimal()
ggplot() +
geom_raster(data = clip_df, aes(x = x, y = y, fill = dependent)) +
geom_sf(data = calgary_fishnet, color = "grey", fill = NA) +
geom_tile() +  # Use geom_tile for raster data
scale_fill_manual(values = c("1" = "yellow", "0" = "red"),
labels = c("1" = "yellow", "0" = "red"),
name = "Flood Status") +
coord_sf() +  # Explicitly use spatial coordinates
labs(title = "Past Flooding in Calgary") +
mapTheme
ggplot() +
geom_raster(data = clip_df, aes(x = x, y = y, fill = dependent)) +
geom_sf(data = calgary_fishnet, color = "grey", fill = NA) +
geom_tile() +  # Use geom_tile for raster data
scale_fill_manual(values = c("1" = "yellow", "0" = "red",na.value = "transparent"),
labels = c("1" = "Inundation", "0" = "Not Inundation"),
name = "Flood Status") +
coord_sf() +  # Explicitly use spatial coordinates
labs(title = "Past Flooding in Calgary") +
mapTheme
View(clip_df)
ggplot() +
geom_raster(data = clip_df, aes(x = x, y = y, fill = dependent)) +
geom_sf(data = calgary_fishnet, color = "grey", fill = NA) +
geom_tile() +  # Use geom_tile for raster data
scale_fill_manual(values = c("1" = "yellow", "0" = "red"),
labels = c("1" = "Inundation", "0" = "Not Inundation"),
name = "Flood Status",
na.value = "transparent") +
coord_sf() +  # Explicitly use spatial coordinates
labs(title = "Past Flooding in Calgary") +
mapTheme
calgary_fac<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/calgary_raster/Calgary_fac.tif")
clipped_cal_fac <- mask(calgary_fac,calfishnet_shp)
cal_fac_df <-as.data.frame(clipped_cal_fac, xy=TRUE)
library(viridis)
ggplot() +
geom_raster(data = cal_fac_df , aes(x = x, y = y, fill =Calgary_fac)) +
geom_sf(data = calgary_fishnet, color = "grey", fill = NA) +
scale_fill_viridis_c(name = "Flow Accumulation",
option = "inferno",
na.value = "transparent",  # Make NA values transparent
begin = 0, end = 1,  # Adjust based on the range of your data
labels = c("Low", "High"),  # Adjust based on what 'begin' and 'end' represent
limits = c(NA, NA)) +  # Auto-adjust limits based on data or specify as needed
coord_sf() +  # Use spatial coordinates
labs(title = "Past Flooding in Calgary") +
mapTheme
View(cal_fac_df)
ggplot() +
geom_raster(data = cal_fac_df , aes(x = x, y = y, fill =Calgary_fac)) +
geom_sf(data = calgary_fishnet, color = "grey", fill = NA) +
scale_fill_viridis_c(name = "Flow Accumulation", option = "inferno", na.value = "transparent") +
coord_sf() +
labs(title = "Past Flooding in Calgary") +
mapTheme
ggplot() +
geom_raster(data = cal_fac_df , aes(x = x, y = y, fill =Calgary_fac)) +
geom_sf(data = calgary_fishnet, color = "grey", fill = NA) +
scale_fill_viridis_c(name = "Flow Accumulation", option = "inferno", na.value = "transparent") +
coord_sf() +
labs(title = "Past Flooding in Calgary") +
mapTheme
library(viridis)
#Flow accumulation
calgary_fac<-raster("C:/Users/USER/Desktop/LandUseModeling/Assignment3/calgary_raster/Calgary_fac.tif")
clipped_cal_fac <- mask(calgary_fac,calfishnet_shp)
cal_fac_df <-as.data.frame(clipped_cal_fac, xy=TRUE)
ggplot() +
geom_raster(data = cal_fac_df , aes(x = x, y = y, fill =Calgary_fac)) +
geom_sf(data = calgary_fishnet, color = "grey", fill = NA) +
scale_fill_viridis_c(name = "Flow Accumulation", option = "inferno", na.value = "transparent") +
coord_sf() +
labs(title = "Past Flooding in Calgary") +
mapTheme
